upstream gin-api {
    server 127.0.0.1:9010;
    keepalive 16;
}
server {
    listen 8000  backlog=1024;
    listen 80  backlog=1024;
    listen 443 ssl  backlog=1024;
    server_name api.hxsapp.com;
    index index.htm index.html;
    root /apps/data/work/go/gin-api/ast;

    # 控制页面缓存, -1s即永远过期
    expires -1s;

    # 强制 https 访问
    #if ($scheme = http) {
    #    return 301 https://$server_name$request_uri;
    #}
    
    # 前端跨域访问
    include /apps/conf/nginx/vhost/extra/crossdomain.conf;

    # https ssl 配置
    ssl_certificate /apps/conf/nginx/sslkey/server.crt;
    ssl_certificate_key /apps/conf/nginx/sslkey/server.key;

    # 缓存池，缓存大小设置为20M，大概能放下 80000 个会话
    ssl_session_cache shared:SSL:20m;
    # 缓存时间
    ssl_session_timeout 10m;

    # 只启用 TLS 系列协议
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # 按照这个套件配置
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE:!kEDH;
    ssl_prefer_server_ciphers on;

    # 启用 HSTS 用于通知浏览器强制使用 https 通信
    #add_header Strict-Transport-Security "max-age=31536000";
    #resolver 8.8.8.8 8.8.4.4;

    location / {
       if (!-e $request_filename) {
            proxy_pass http://gin-api;
        }
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Connection upgrade;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header X-Real_IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout      30;
        proxy_send_timeout         45;
        proxy_read_timeout         90;
        proxy_buffering            off;
        proxy_buffer_size          4k;
        proxy_buffers              4 32k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;
    }

    access_log  /apps/logs/nginx/api.hxsapp.com.access.log  f_access_log;
    error_log  /apps/logs/nginx/api.hxsapp.com.err.log  ;

    error_page 500 501 502 503 504 /50x.html;
    location = /50x.html {
        root   /apps/svr/nginx/html/error_page;
    }

    error_page 400 403 404 405 408 410 412 413 414 415 /40x.html;
    location = /40x.html {
        root   /apps/svr/nginx/html/error_page;
    }
}